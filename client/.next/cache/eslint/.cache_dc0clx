[{"/Users/aemiej/Documents/github/hackmanthon/client/pages/_app.js":"1","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/generatePDF.js":"2","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/generateText.js":"3","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/generateTweet.js":"4","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/login.js":"5","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/logout.js":"6","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/HomeCard/index.js":"7","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ImageCard/index.js":"8","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/LoginCard/index.js":"9","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js":"10","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportImage/RadialSeparators.js":"11","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportImage/index.js":"12","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportPDF/RadialSeparators.js":"13","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportPDF/index.js":"14","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportText/RadialSeparators.js":"15","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportText/index.js":"16","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportTweet/RadialSeparators.js":"17","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportTweet/index.js":"18","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/TextCard/index.js":"19","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/TweetCard/index.js":"20","/Users/aemiej/Documents/github/hackmanthon/client/pages/image.js":"21","/Users/aemiej/Documents/github/hackmanthon/client/pages/index.js":"22","/Users/aemiej/Documents/github/hackmanthon/client/pages/pdf.js":"23","/Users/aemiej/Documents/github/hackmanthon/client/pages/text.js":"24","/Users/aemiej/Documents/github/hackmanthon/client/pages/tweet.js":"25"},{"size":184,"mtime":1655395783570,"results":"26","hashOfConfig":"27"},{"size":1629,"mtime":1655627753613,"results":"28","hashOfConfig":"27"},{"size":772,"mtime":1655569148789,"results":"29","hashOfConfig":"27"},{"size":781,"mtime":1655569202641,"results":"30","hashOfConfig":"27"},{"size":540,"mtime":1655556507691,"results":"31","hashOfConfig":"27"},{"size":436,"mtime":1655556595691,"results":"32","hashOfConfig":"27"},{"size":358,"mtime":1655377777781,"results":"33","hashOfConfig":"27"},{"size":6727,"mtime":1655628152323,"results":"34","hashOfConfig":"27"},{"size":6156,"mtime":1655556512097,"results":"35","hashOfConfig":"27"},{"size":7051,"mtime":1655627961060,"results":"36","hashOfConfig":"27"},{"size":512,"mtime":1655627988723,"results":"37","hashOfConfig":"27"},{"size":9582,"mtime":1655628067355,"results":"38","hashOfConfig":"27"},{"size":512,"mtime":1655628007735,"results":"39","hashOfConfig":"27"},{"size":9554,"mtime":1655628082679,"results":"40","hashOfConfig":"27"},{"size":512,"mtime":1655628017552,"results":"41","hashOfConfig":"27"},{"size":9533,"mtime":1655628094597,"results":"42","hashOfConfig":"27"},{"size":511,"mtime":1655628025544,"results":"43","hashOfConfig":"27"},{"size":11743,"mtime":1655628105760,"results":"44","hashOfConfig":"27"},{"size":7165,"mtime":1655570138680,"results":"45","hashOfConfig":"27"},{"size":8417,"mtime":1655570121663,"results":"46","hashOfConfig":"27"},{"size":956,"mtime":1655531201389,"results":"47","hashOfConfig":"27"},{"size":2612,"mtime":1655400312851,"results":"48","hashOfConfig":"27"},{"size":947,"mtime":1655531134271,"results":"49","hashOfConfig":"27"},{"size":952,"mtime":1655454141930,"results":"50","hashOfConfig":"27"},{"size":955,"mtime":1655535135958,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wm6vvw",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aemiej/Documents/github/hackmanthon/client/pages/_app.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/api/generatePDF.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/api/generateText.js",["107"],"import { server } from \"../../config/server.js\"\n\nexport default async (req, res) => {\n    let body = JSON.parse(req.body);\n    let base64 = body.base64;\n    let text = body.text;\n\n    let requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Authorization\": `Basic ${base64}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"text\": text\n        }),\n        redirect: 'follow'\n    };\n\n    try {\n        let response = await fetch(`${server}/api/examine/text`, requestOptions); \n        let data = await response.json();\n        res.status(200).json({ data: JSON.stringify(data), err: null });\n    } catch (err) {\n        res.status(500).json({ data: null, err: 'Generation unsuccessful'})\n    }\n\n\n}","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/generateTweet.js",["108"],"import { server } from \"../../config/server.js\"\n\nexport default async (req, res) => {\n    let body = JSON.parse(req.body);\n    let base64 = body.base64;\n    let tweet = body.tweet;\n\n    let requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Authorization\": `Basic ${base64}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"tweetId\": tweet\n        }),\n        redirect: 'follow'\n    };\n\n    try {\n        let response = await fetch(`${server}/api/examine/twitter`, requestOptions); \n        let data = await response.json();\n        res.status(200).json({ data: JSON.stringify(data), err: null });\n    } catch (err) {\n        res.status(500).json({ data: null, err: 'Generation unsuccessful'})\n    }\n\n\n}","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/login.js",["109"],"import { server } from \"../../config/server.js\"\n\nexport default async (req, res) => {\n    let base64 = req.body;\n\n    let requestOptions = {\n        method: 'GET',\n        headers: {\n            \"Authorization\": `Basic ${base64}`, \n        },\n        redirect: 'follow'\n    };\n\n    try {\n        let response = await fetch(`${server}/api/auth/login`, requestOptions);\n        res.status(200).json({ data: \"Login successful\", err: null });\n    } catch (err) {\n        res.status(200).json({ data: null, err: \"Login unsuccessful\" });\n    }\n\n}","/Users/aemiej/Documents/github/hackmanthon/client/pages/api/logout.js",["110"],"import { server } from \"../../config/server.js\"\n\nexport default async (req, res) => {\n    let requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n    };\n\n    try {\n        let response = await fetch(`${server}/api/auth/logout`, requestOptions);\n        res.status(200).json({ data: \"Logout successful\", err: null });\n    } catch (err) {\n        res.status(200).json({ data: null, err: \"Logout unsuccessful\" });\n    }\n\n}","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/HomeCard/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ImageCard/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/LoginCard/index.js",["111","112"],"import Head from 'next/head'\nimport Image from 'next/image'\nimport Link from \"next/link\"\nimport { Form, Button, Navbar, Nav, Container } from \"react-bootstrap\"\nimport { useState } from \"react\"\n\nimport styles from \"./Login.module.css\"\nimport { client } from \"../../../config/client\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport default function LoginCard({ locale, service }) {\n    const home = locale === \"hi-HI\" ? `/hi-HI` : `/`;\n    const serviceLink = locale === \"hi-HI\" ? `/hi-HI/${service}` : `/${service}`\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const utf8_to_b64 = (str) => {\n        return window.btoa(unescape(encodeURIComponent(str)));\n    }\n\n    const submitLogin = async(e) => {\n        e.preventDefault();\n        // TODO: to integrate with backend\n        let flag = 1;\n        let base64 = utf8_to_b64(`${name}:${password}`);\n\n        const res = await fetch(`${client}/api/login`, {\n            method: \"post\", \n            body: base64\n        });\n\n        const {data, err} = await res.json();\n        \n        if (data === null) flag = 0;\n        if (flag) {\n            localStorage.setItem(\"auth\", 1);\n            localStorage.setItem(\"encode\", base64);\n            window.location.href = serviceLink;\n        }\n        else {\n            let err = locale === \"hi-HI\" ? \"लॉगिन सफल नहीं रहा। पुनः प्रयास करें या होमपेज पर जाएं\" : \"Login hasn't been successful. Try again or go to homepage\";\n            toast(err,\n                {\n                    closeOnClick: true,\n                    autoClose: 10000\n                });\n        }\n    }\n\n    return (\n        <div className={styles.container}>\n            <Navbar bg=\"light\" expand=\"lg\" className={styles.nav}>\n                <Container>\n                    <Nav className=\"me-auto\">\n                        {/* <Nav.Link href={serviceLink} className={styles.nav_link}>&larr; {\n                            locale === \"hi-HI\" ? \"सेवा पर वापस\" : \"Back to service\"\n                        }</Nav.Link> */}\n                        <Nav.Link href={home} className={styles.nav_link}> {\n                            locale === \"hi-HI\" ? \"होमपेज\" : \"Homepage\"\n                        }</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n            <main className={styles.main}>\n                <h1 className={styles.title}>\n                    {\n                        locale === \"hi-HI\" ? \"वुल्फ देखें 🐺: लॉग इन करें\" : \"Watch Wolf 🐺: Login\"\n                    }\n                </h1>\n\n                <p className={styles.description}>\n                    <i>\n                        {\n                            locale === \"hi-HI\" ? <>\n                                छवियों और पीडीएफ से हिंदी और अंग्रेजी भाषा में पाठ की भावना का विश्लेषण करें।\n                            <br />यह लॉगिन पेज है और किसी भी सुविधा को एक्सेस करने से पहले अधिकृत होना आवश्यक है।\n                            </> :\n                                <>Analyze the sentiment of the text from images and PDF in Hindi and English Language.\n                                <br />This is the login page and one needs to be authorized before accessing any feature.\n                                </>\n                        }\n                    </i>\n                </p>\n\n                <div className={styles.row}>\n                    <div className={styles.card}>\n                        <Form>\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                <Form.Label\n                                    className={styles.label}\n                                >{locale === \"hi-HI\" ? \"उपयोगकर्ता नाम\" : \"Username\"}</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={e => { setName(e.target.value) }}\n                                    placeholder={locale === \"hi-HI\" ? \"उपयोगकर्ता नाम दर्ज करें\" : \"Enter Username\"} />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                <Form.Label\n                                    className={styles.label}\n                                >{locale === \"hi-HI\" ? \"पासवर्ड\" : \"Password\"}</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={e => { setPassword(e.target.value) }}\n                                    placeholder={locale === \"hi-HI\" ? \"पास वर्ड दर्ज करें\" : \"Enter Password\"} />\n                            </Form.Group>\n                            <br />\n                            <Button variant=\"primary\"\n                                type=\"submit\"\n                                className={styles.submit}\n                                onClick={submitLogin}\n                            >\n                                {locale === \"hi-HI\" ? \"प्रस्तुत करना\" : \"Submit\"}\n                            </Button>\n                        </Form>\n                    </div>\n                    <div className={styles.img}>\n                        <img src=\"/police.png\" />\n                    </div>\n                </div>\n            </main>\n            <ToastContainer\n                autoClose={10000}\n                closeOnClick />\n        </div>\n    );\n}","/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportImage/RadialSeparators.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportImage/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportPDF/RadialSeparators.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportPDF/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportText/RadialSeparators.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportText/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportTweet/RadialSeparators.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/ReportTweet/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/TextCard/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/TweetCard/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/image.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/index.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/pdf.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/text.js",[],"/Users/aemiej/Documents/github/hackmanthon/client/pages/tweet.js",[],{"ruleId":"113","severity":1,"message":"114","line":3,"column":1,"nodeType":"115","endLine":29,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":3,"column":1,"nodeType":"115","endLine":29,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":3,"column":1,"nodeType":"115","endLine":21,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":3,"column":1,"nodeType":"115","endLine":16,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":122,"column":25,"nodeType":"118","endLine":122,"endColumn":50},{"ruleId":"119","severity":1,"message":"120","line":122,"column":25,"nodeType":"118","endLine":122,"endColumn":50},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]