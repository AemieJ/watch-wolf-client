"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/pdf",{

/***/ "./pages/components/PDFCard/index.js":
/*!*******************************************!*\
  !*** ./pages/components/PDFCard/index.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ServiceCard; }\n/* harmony export */ });\n/* harmony import */ var _Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Service_module_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Service.module.css */ \"./pages/components/PDFCard/Service.module.css\");\n/* harmony import */ var _Service_module_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_Service_module_css__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _ReportPDF__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ReportPDF */ \"./pages/components/ReportPDF/index.js\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-toastify */ \"./node_modules/react-toastify/dist/react-toastify.esm.mjs\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _config_client__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../config/client */ \"./config/client.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nvar _s = $RefreshSig$();\nfunction ServiceCard(param) {\n    var locale = param.locale;\n    _s();\n    var home = locale === \"hi-HI\" ? \"/hi-HI\" : \"/\";\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(\"\"), result1 = ref3[0], setResult = ref3[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(false), clicked = ref1[0], setClicked = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(\"\"), text = ref2[0], setText = ref2[1];\n    var getBase64 = function(file) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function getBase64() {\n            console.log(reader.result);\n        };\n        reader.onerror = function(error) {\n            console.log(\"Error: \", error);\n        };\n    };\n    var dataURLtoFile = function(dataurl, filename) {\n        var arr = dataurl.split(\",\"), mime = arr[0].match(/:(.*?);/)[1], bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n        while(n--){\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n        return new File([\n            u8arr\n        ], filename, {\n            type: mime\n        });\n    };\n    var generateReport = function() {\n        var _ref = _asyncToGenerator(_Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(e) {\n            var err, input, formData, requestOptions, res, ref, data, err1, result, jsonRes;\n            return _Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        e.preventDefault();\n                        setClicked(true);\n                        if (!(text.length === 0)) {\n                            _ctx.next = 6;\n                            break;\n                        }\n                        {\n                            setClicked(false);\n                            setText(\"\");\n                            err = locale === \"hi-HI\" ? \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u090F\\u0915 \\u092A\\u0940\\u0921\\u0940\\u090F\\u092B \\u0938\\u0902\\u0932\\u0917\\u094D\\u0928 \\u0915\\u0930\\u0947\\u0902\\u0964 \\u0905\\u091F\\u0948\\u091A\\u092E\\u0947\\u0902\\u091F \\u0916\\u093E\\u0932\\u0940 \\u0928\\u0939\\u0940\\u0902 \\u0939\\u094B \\u0938\\u0915\\u0924\\u093E|\" : \"Please attach a PDF. Attachment cannot be empty.\";\n                            (0,react_toastify__WEBPACK_IMPORTED_MODULE_7__.toast)(err, {\n                                closeOnClick: true,\n                                autoClose: 10000\n                            });\n                        }\n                        _ctx.next = 24;\n                        break;\n                    case 6:\n                        input = document.querySelector(\"#customFile\");\n                        console.log(dataURLtoFile(\"data:application/pdf;base64,\", input.files[0][\"name\"]));\n                        formData = new FormData();\n                        formData.append(\"file\", input.files[0], input.files[0][\"name\"]);\n                        requestOptions = {\n                            method: \"POST\",\n                            headers: {\n                                \"Authorization\": \"Basic \".concat(localStorage.getItem(\"encode\")),\n                                \"Content-Type\": \"multipart/form-data\"\n                            },\n                            body: formData,\n                            redirect: \"follow\"\n                        };\n                        _ctx.next = 13;\n                        return fetch(\"\".concat(_config_client__WEBPACK_IMPORTED_MODULE_9__.client, \"/api/generatePDF\"), {\n                            method: \"POST\",\n                            body: JSON.stringify(requestOptions)\n                        });\n                    case 13:\n                        res = _ctx.sent;\n                        _ctx.next = 16;\n                        return res.json();\n                    case 16:\n                        ref = _ctx.sent;\n                        data = ref.data;\n                        err1 = ref.err;\n                        console.log(data);\n                        result = \"\";\n                        jsonRes = {\n                            \"languageCode\": \"en\",\n                            \"sentiment\": {\n                                \"positiveScore\": 0.20946373045444489,\n                                \"negativeScore\": 6.742851692251861E-4,\n                                \"neutralScore\": 0.7898232340812683,\n                                \"mixedScore\": 3.8793106796219945E-5\n                            },\n                            \"entities\": [\n                                {\n                                    \"text\": \"Deutsche Bank of India\",\n                                    \"type\": \"ORGANIZATION\",\n                                    \"score\": 0.9490169286727905\n                                },\n                                {\n                                    \"text\": \"summer of 2022\",\n                                    \"type\": \"DATE\",\n                                    \"score\": 0.8828208446502686\n                                }\n                            ]\n                        };\n                        result = JSON.stringify(jsonRes);\n                        setResult(result);\n                    case 24:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function generateReport(e) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var logout = function() {\n        var _ref = _asyncToGenerator(_Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(e) {\n            var res, ref, data, err, err2;\n            return _Users_aemiej_Documents_github_hackmanthon_client_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        e.preventDefault();\n                        _ctx.next = 3;\n                        return fetch(\"\".concat(_config_client__WEBPACK_IMPORTED_MODULE_9__.client, \"/api/logout\"), {\n                            method: \"GET\"\n                        });\n                    case 3:\n                        res = _ctx.sent;\n                        _ctx.next = 6;\n                        return res.json();\n                    case 6:\n                        ref = _ctx.sent;\n                        data = ref.data;\n                        err = ref.err;\n                        if (data !== null) {\n                            localStorage.setItem(\"auth\", 0);\n                            localStorage.setItem(\"encode\", \"\");\n                            window.location.href = \"\".concat(_config_client__WEBPACK_IMPORTED_MODULE_9__.client, \"/\");\n                        } else {\n                            err2 = locale === \"hi-HI\" ? \"\\u0932\\u0949\\u0917\\u0906\\u0909\\u091F \\u0905\\u0938\\u092B\\u0932\" : \"Logout unsuccessful\";\n                            (0,react_toastify__WEBPACK_IMPORTED_MODULE_7__.toast)(err2, {\n                                closeOnClick: true,\n                                autoClose: 10000\n                            });\n                        }\n                    case 10:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function logout(e) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var _obj;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        suppressHydrationWarning: true,\n        className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Navbar, {\n                bg: \"light\",\n                expand: \"lg\",\n                className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().nav),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Container, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Nav, {\n                            className: \"me-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Nav.Link, {\n                                href: home,\n                                className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().nav_link),\n                                children: [\n                                    \" \",\n                                    locale === \"hi-HI\" ? \"\\u0939\\u094B\\u092E\\u092A\\u0947\\u091C\" : \"Homepage\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                                lineNumber: 140,\n                                columnNumber: 25\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                            lineNumber: 139,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Nav, {\n                            className: \"mr-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Nav.Link, {\n                                href: home,\n                                className: \"\".concat((_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().nav_link), \" \").concat((_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().nav_btn)),\n                                onClick: logout,\n                                children: [\n                                    \" \",\n                                    locale === \"hi-HI\" ? \"\\u0932\\u0949\\u0917 \\u0906\\u0909\\u091F\" : \"Logout\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                                lineNumber: 145,\n                                columnNumber: 25\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                            lineNumber: 144,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                    lineNumber: 138,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                lineNumber: 137,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"main\", {\n                className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().main),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"h1\", {\n                        className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().title),\n                        children: locale === \"hi-HI\" ? \"\\u0935\\u0941\\u0932\\u094D\\u092B \\u0926\\u0947\\u0916\\u0947\\u0902 \\uD83D\\uDC3A: \\u092A\\u0940\\u0921\\u0940\\u090F\\u092B \\u0930\\u093F\\u092A\\u094B\\u0930\\u094D\\u091F\" : \"Watch Wolf \\uD83D\\uDC3A: PDF Report\"\n                    }, void 0, false, {\n                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                        lineNumber: 154,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                        className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().description),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"i\", {\n                            children: locale === \"hi-HI\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                                children: [\n                                    \"\\u091B\\u0935\\u093F\\u092F\\u094B\\u0902 \\u0914\\u0930 \\u092A\\u0940\\u0921\\u0940\\u090F\\u092B \\u0938\\u0947 \\u0939\\u093F\\u0902\\u0926\\u0940 \\u0914\\u0930 \\u0905\\u0902\\u0917\\u094D\\u0930\\u0947\\u091C\\u0940 \\u092D\\u093E\\u0937\\u093E \\u092E\\u0947\\u0902 \\u092A\\u093E\\u0920 \\u0915\\u0940 \\u092D\\u093E\\u0935\\u0928\\u093E \\u0915\\u093E \\u0935\\u093F\\u0936\\u094D\\u0932\\u0947\\u0937\\u0923 \\u0915\\u0930\\u0947\\u0902\\u0964\",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"br\", {}, void 0, false, {\n                                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                                        lineNumber: 165,\n                                        columnNumber: 29\n                                    }, this),\n                                    \"\\u092A\\u0940\\u0921\\u0940\\u090F\\u092B \\u0938\\u0902\\u0932\\u0917\\u094D\\u0928 \\u0915\\u0930\\u0915\\u0947 \\u0938\\u0947\\u0902\\u091F\\u0940\\u092E\\u0947\\u0902\\u091F \\u0930\\u093F\\u092A\\u094B\\u0930\\u094D\\u091F \\u0924\\u0948\\u092F\\u093E\\u0930 \\u0915\\u0940 \\u091C\\u093E \\u0938\\u0915\\u0924\\u0940 \\u0939\\u0948\\u0964 \\u0928\\u0940\\u091A\\u0947 \\u092A\\u0940\\u0921\\u0940\\u090F\\u092B \\u0938\\u0902\\u0932\\u0917\\u094D\\u0928 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n                                ]\n                            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                                children: [\n                                    \"Analyze the sentiment of the text from images and PDF in Hindi and English Language.\",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"br\", {}, void 0, false, {\n                                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                                        lineNumber: 168,\n                                        columnNumber: 33\n                                    }, this),\n                                    \"Sentiment report can be generated by attaching PDF. Attach the PDF below.\"\n                                ]\n                            }, void 0, true)\n                        }, void 0, false, {\n                            fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                            lineNumber: 161,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                        lineNumber: 160,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"input\", (_obj = {\n                        type: \"file\",\n                        class: \"form-control\",\n                        id: \"customFile\"\n                    }, _defineProperty(_obj, \"type\", \"file\"), _defineProperty(_obj, \"accept\", \"application/pdf\"), _defineProperty(_obj, \"onChange\", function(e) {\n                        return setText(e.target.value);\n                    }), _defineProperty(_obj, \"disabled\", clicked), _obj), void 0, false, {\n                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                        lineNumber: 173,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"br\", {}, void 0, false, {\n                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                        lineNumber: 178,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Button, {\n                                variant: \"primary\",\n                                type: \"submit\",\n                                className: (_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().submit),\n                                onClick: generateReport,\n                                children: locale === \"hi-HI\" ? \"\\u0930\\u093F\\u092A\\u094B\\u0930\\u094D\\u091F \\u092C\\u0928\\u093E\\u0913\" : \"Generate Report\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                                lineNumber: 180,\n                                columnNumber: 21\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_bootstrap__WEBPACK_IMPORTED_MODULE_11__.Button, {\n                                type: \"submit\",\n                                className: \"\".concat((_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().submit), \" \").concat((_Service_module_css__WEBPACK_IMPORTED_MODULE_10___default().clear)),\n                                onClick: function() {\n                                    setClicked(false);\n                                    setResult(\"\");\n                                    setText(\"\");\n                                    document.querySelector(\"#customFile\").value = null;\n                                },\n                                children: locale === \"hi-HI\" ? \"\\u0930\\u093F\\u092A\\u094B\\u0930\\u094D\\u091F \\u0938\\u093E\\u092B\\u093C \\u0915\\u0930\\u0947\\u0902\" : \"Clear Report\"\n                            }, void 0, false, {\n                                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                                lineNumber: 187,\n                                columnNumber: 21\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                        lineNumber: 179,\n                        columnNumber: 17\n                    }, this),\n                    result1.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {}, void 0, false) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_ReportPDF__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            locale: locale,\n                            result: result1\n                        }, void 0, false, {\n                            fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                            lineNumber: 204,\n                            columnNumber: 29\n                        }, this)\n                    }, void 0, false)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                lineNumber: 153,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_toastify__WEBPACK_IMPORTED_MODULE_7__.ToastContainer, {\n                autoClose: 10000,\n                closeOnClick: true\n            }, void 0, false, {\n                fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n                lineNumber: 209,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aemiej/Documents/github/hackmanthon/client/pages/components/PDFCard/index.js\",\n        lineNumber: 136,\n        columnNumber: 9\n    }, this);\n};\n_s(ServiceCard, \"ojiSMdIOpsfIKsAftW2C3N83qZo=\");\n_c = ServiceCard;\nvar _c;\n$RefreshReg$(_c, \"ServiceCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/components/PDFCard/index.js\n");

/***/ })

});